{% extends 'base.html.twig' %}
{% block title %}Транзакции (ДДС){% endblock %}

{% block breadcrumbs %}
    {% include 'partials/_breadcrumbs.html.twig' with {
        breadcrumbs: [
            {'label': 'Главная', 'path': 'app_home_index'},
            {'label': 'Финансы'},
            {'label': 'Транзакции', 'path': 'cash_transaction_index'}
        ]
    } %}
{% endblock %}

{% block content %}
<div class="d-flex align-items-center gap-2 flex-wrap mb-3">
    <h2 class="page-title mb-0">Транзакции (ДДС)</h2>
    <div class="ms-auto d-print-none">
        <div class="btn-list">
            <a href="#"
               class="btn btn-outline-secondary"
               data-bs-toggle="offcanvas"
               data-bs-target="#transaction-filters-offcanvas">
                <i class="ti ti-filter"></i>
                Фильтры
            </a>
            <a href="{{ path('cash_transaction_new') }}" class="btn btn-primary">Добавить</a>
            <a href="/cash/import/bank1c"
               class="btn btn-primary"
               data-testid="btn-import-1c">
                <i class="ti ti-upload me-1"></i>
                Импорт 1С
            </a>
            <a href="#" class="btn btn-outline-secondary">Экспорт</a>
        </div>
    </div>
</div>

{% if transactions is defined and transactions|length == 0 %}
  <div class="card my-3">
    <div class="card-body text-center">
      <h3 class="mb-2">Пока нет операций</h3>
      <p class="text-muted mb-3">Загрузите выписку в формате 1С или добавьте операцию вручную.</p>
      <a href="{{ path('cash_bank1c_import_upload') }}" class="btn btn-primary me-2">Импорт 1С</a>
      <a href="{{ path('finance_cash_transaction_new') }}" class="btn btn-outline-primary">Добавить операцию</a>
    </div>
  </div>
{% endif %}

<div class="card mt-3">
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead class="sticky-top">
            <tr>
                <th>Дата</th>
                <th>Счет</th>
                <th class="text-end">Сумма</th>
                <th>Статья / Проект</th>
                <th>Контрагент</th>
                <th>Описание</th>
                <th></th>
            </tr>
            </thead>
            <tbody>
            {% for tx in transactions %}
                <tr>
                    <td>{{ tx.occurredAt|date('d.m.Y') }}</td>
                    <td>{{ tx.moneyAccount.name }}</td>
                    <td class="text-end"><span class="text-{{ tx.direction.value == 'INFLOW' ? 'success' : 'danger' }}">{{ tx.direction.value == 'INFLOW' ? '+' : '-' }}{{ tx.amount|number_format(2, ',', ' ') }} {{ tx.currency }}</span></td>
                    <td>
                        {{ tx.cashflowCategory ? tx.cashflowCategory.name : '' }}
                        {% if tx.projectDirection %}
                            <div class="text-muted small">{{ tx.projectDirection.name }}</div>
                        {% endif %}
                    </td>
                    <td>{{ tx.counterparty ? tx.counterparty.name : '' }}</td>
                    <td>{{ tx.description }}</td>
                    <td class="text-nowrap">
                        <a href="{{ path('cash_transaction_edit', {id: tx.id}) }}" class="btn btn-sm btn-icon btn-warning" title="Редактировать" aria-label="Редактировать">
                            <i class="ti ti-pencil"></i>
                            <span class="visually-hidden">Редактировать</span>
                        </a>
                        <a href="#"
                           class="btn btn-sm btn-outline-secondary js-auto-rule"
                           data-transaction-id="{{ tx.id }}"
                           data-url="{{ path('cash_transaction_auto_rule_match_one', {transactionId: tx.id}) }}"
                           data-bs-toggle="modal"
                           data-bs-target="#autoRuleModal">
                          A+
                        </a>
                        <button class="btn btn-sm btn-icon btn-danger"
                                data-bs-toggle="modal"
                                data-bs-target="#delete-modal-{{ tx.id }}"
                                title="Удалить"
                                aria-label="Удалить">
                            <i class="ti ti-trash"></i>
                            <span class="visually-hidden">Удалить</span>
                        </button>
                        {{ include('transaction/_delete_modal.html.twig', {tx: tx}) }}
                    </td>
                </tr>
            {% else %}
                <tr>
                    <td colspan="7" class="text-center text-muted">Нет транзакций</td>
                </tr>
            {% endfor %}
            </tbody>
        </table>
    </div>
</div>

{% include 'partials/_pagination.html.twig' with {pager: pager} %}

<div class="card mt-3">
    <div class="card-body">
        <div class="row mb-2">
            <div class="col">Приток</div>
            <div class="col text-end text-success">{{ summary.inflow|number_format(2, ',', ' ') }}</div>
        </div>
        <div class="row mb-2">
            <div class="col">Отток</div>
            <div class="col text-end text-danger">{{ summary.outflow|number_format(2, ',', ' ') }}</div>
        </div>
        <div class="row fw-bold">
            <div class="col">Баланс движения</div>
            <div class="col text-end">{{ summary.net|number_format(2, ',', ' ') }}</div>
        </div>
    </div>
</div>

{{ include('transaction/_filters.html.twig') }}

<div class="modal fade" id="autoRuleModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-dialog-scrollable">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Автоправило</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
      </div>
      <div class="modal-body" id="autoRuleModalBody">
        <div class="text-muted">Загрузка…</div>
      </div>
    </div>
  </div>
</div>
{% endblock %}

{% block scripts %}
    {{ parent() }}
    <script>
        document.querySelectorAll('[data-period]').forEach(btn => {
            btn.addEventListener('click', function () {
                const from = document.querySelector('#filter_date_from');
                const to = document.querySelector('#filter_date_to');
                const now = new Date();
                let start = new Date(now);
                if (this.dataset.period === 'today') {
                    start = now;
                } else if (this.dataset.period === 'yesterday') {
                    start.setDate(start.getDate() - 1);
                    now.setDate(now.getDate() - 1);
                } else if (this.dataset.period === 'week') {
                    start.setDate(start.getDate() - start.getDay() + 1);
                } else if (this.dataset.period === 'month') {
                    start = new Date(now.getFullYear(), now.getMonth(), 1);
                }
                const fmt = d => d.toISOString().slice(0,10);
                from.value = fmt(start);
                to.value = fmt(now);
            });
        });
    </script>
    <script>
    document.addEventListener('click', async (e) => {
      const btn = e.target.closest('.js-auto-rule');
      if (!btn) return;

      e.preventDefault();
      const url = btn.dataset.url;
      const modalEl = document.getElementById('autoRuleModal');
      const bodyEl  = document.getElementById('autoRuleModalBody');

      bodyEl.innerHTML = '<div class="text-muted">Загрузка…</div>';

      // Показ модалки (Tabler/Bootstrap 5)
      const modal = window.bootstrap?.Modal.getOrCreateInstance(modalEl);
      modal?.show();

      try {
        const html = await fetch(url, {headers: {'X-Requested-With':'XMLHttpRequest'}}).then(r => r.text());
        bodyEl.innerHTML = html;
      } catch(err) {
        bodyEl.innerHTML = '<div class="text-danger">Ошибка загрузки</div>';
      }

      // Обработка submit "Применить" внутри модалки (AJAX)
      modalEl.addEventListener('submit', async (ev) => {
        const f = ev.target;
        if (f.id !== 'autoRuleApplyForm') return;
        ev.preventDefault();

        const formData = new FormData(f);
        const res = await fetch(f.action, { method: 'POST', body: formData, headers: {'X-Requested-With': 'XMLHttpRequest'}});
        const data = await res.json();

        if (data.ok) {
          bodyEl.innerHTML = `
        <div class="alert alert-success mb-2">Применено: ${data.changed ? 'да' : 'без изменений'}</div>
        <div>Правило: <b>${data.ruleName}</b> (${data.action})</div>
        <div class="mt-3 text-end">
          <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Закрыть</button>
        </div>`;
        } else {
          bodyEl.innerHTML = `
        <div class="alert alert-warning mb-2">${data.message ?? 'Не найдено'}</div>
        <div class="mt-3 text-end">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Закрыть</button>
        </div>`;
        }
      }, { once: true });
    });
    </script>
{% endblock %}

