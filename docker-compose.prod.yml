services:
    traefik:
        image: traefik:3.3
        container_name: traefik
        restart: always
        command:
            --providers.docker=true
            --providers.docker.watch=true
            --providers.docker.swarmMode=true
            --providers.docker.exposedByDefault=false
            --entryPoints.http.address=:80
            --entryPoints.https.address=:443
            --certificatesresolvers.letsEncrypt.acme.httpChallenge=true
            --certificatesresolvers.letsEncrypt.acme.httpChallenge.entryPoint=http
            --certificatesresolvers.letsEncrypt.acme.email=mail@2bstock.ru
            --certificatesresolvers.letsEncrypt.acme.storage=/certs/acme.json
        ports:
            -   target: 80
                published: 80
                protocol: tcp
                mode: host
            -   target: 443
                published: 443
                protocol: tcp
                mode: host
        networks:
            - traefik-public
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - traefik-public-certs:/certs
        labels:
            - traefik.enable=true
            - traefik.docker.network=traefik-public
            
            - traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)
            - traefik.http.routers.http-catchall.entryPoints=http
            - traefik.http.routers.http-catchall.middlewares=redirect-to-https
            - traefik.http.services.http-catchall.loadBalancer.server.port=80
            
            - traefik.http.middlewares.redirect-to-https.redirectScheme.scheme=https
            - traefik.http.middlewares.redirect-to-https.redirectScheme.permanent=true
            
            - traefik.http.middlewares.secure-headers.headers.sslRedirect=true
            - traefik.http.middlewares.secure-headers.headers.stsSeconds=31536000
            - traefik.http.middlewares.secure-headers.headers.contentSecurityPolicy=block-all-mixed-content

    
    site:
        build:
            context: site
            dockerfile: docker/production/nginx/Dockerfile
        container_name: nginx
        restart: always
        depends_on:
            - site-php-fpm
        networks:
            - traefik-public
            - default
        labels:
            - traefik.enable=true
            - traefik.docker.network=traefik-public
            - traefik.http.routers.frontend.rule=Host(`app.2bstock.ru`) || Host(`www.app.2bstock.ru`)
            - traefik.http.services.frontend.loadBalancer.server.port=80
            - traefik.http.middlewares.frontend-redirect.redirectRegex.regex=^(https?://)www.app.2bstock.ru/(.*)$$
            - traefik.http.middlewares.frontend-redirect.redirectRegex.replacement=$${1}app.2bstock.ru/$${2}
            - traefik.http.middlewares.frontend-redirect.redirectRegex.permanent=true
            - traefik.http.routers.frontend.middlewares=frontend-redirect,secure-headers
            - traefik.http.routers.frontend.entryPoints=https
            - traefik.http.routers.frontend.tls=true
            - traefik.http.routers.frontend.tls.certResolver=letsEncrypt
    
    site-php-fpm:
        build:
            context: site
            dockerfile: docker/production/php-fpm/Dockerfile
        container_name: php-fpm
        restart: always
        environment:
            DATABASE_URL: ${DATABASE_URL}
            APP_ENV: PROD
            APP_SECRET: ${APP_SECRET}
        networks:
            - default
        depends_on:
            - site-postgres
    
    site-postgres:
        image: postgres:15-alpine
        container_name: symfony-postgres
        restart: always
        environment:
            POSTGRES_DB: app
            POSTGRES_USER: app
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        volumes:
            - postgres_data:/var/lib/postgresql/data

volumes:
    postgres_data:
    traefik-public-certs:

networks:
    traefik-public:
        external: true
        driver: bridge
    default:
        driver: bridge