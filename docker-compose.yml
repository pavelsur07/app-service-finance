services:
    traefik:
        image: traefik:3.3
        command:
            --providers.docker=true
            --providers.docker.exposedByDefault=false
            --entryPoints.http.address=:80
        ports:
            - "80:80"
            - "8080:8080"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
        labels:
            - traefik.enable=true
            - traefik.docker.network=traefik-public
        networks:
            - traefik-public
    land:
        image: nginx:1.27-alpine
        restart: unless-stopped
        volumes:
          - ./landing/public:/usr/share/nginx/html:ro
          - ./landing/nginx/conf.d:/etc/nginx/conf.d:ro
        networks:
          - traefik-public
        labels:
          - traefik.enable=true
          - traefik.docker.network=traefik-public

          # Traefik router → land.localhost
          - traefik.http.routers.land.rule=Host(`land.localhost`)
          - traefik.http.routers.land.entryPoints=http
          - traefik.http.routers.land.service=land
          - traefik.http.services.land.loadbalancer.server.port=80
    site:
        build:
            context: site/docker
            dockerfile: development/nginx/Dockerfile
        volumes:
            - ./site:/app
            - ./landing:/app/landing   # ← добавили
        networks:
            - traefik-public
            - default
        labels:
            - traefik.enable=true
            - traefik.docker.network=traefik-public
            - traefik.http.routers.site.rule=Host(`localhost`)
            - traefik.http.routers.site.entryPoints=http
            - traefik.http.services.site.loadBalancer.server.port=80
    site-php-fpm:
        build:
            context: site/docker
            dockerfile: development/php-fpm/Dockerfile
        container_name: symfony-php-fpm
        depends_on:
          - site-redis
        volumes:
          - ./site:/app
    site-php-cli:
        build:
            context: site/docker
            dockerfile: development/php-cli/Dockerfile
        container_name: symfony-cli
        working_dir: /app
        volumes:
            - ./site:/app
        command: php bin/console
    site-postgres:
        image: postgres:15-alpine
        container_name: symfony-postgres
        restart: always
        environment:
            POSTGRES_DB: app
            POSTGRES_USER: app
            POSTGRES_PASSWORD: secret
        volumes:
            - postgres_data:/var/lib/postgresql/data
    site-redis:
        image: redis:7-alpine
        container_name: site-redis
        restart: unless-stopped
        command: [ "redis-server", "--appendonly", "yes" ]
        volumes:
          - site-redis-data:/data
volumes:
    postgres_data:
    site-redis-data:
networks:
    traefik-public:
        name: traefik-public
        driver: bridge